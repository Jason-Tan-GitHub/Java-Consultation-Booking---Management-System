/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import process.processes;
import java.awt.Color;
import java.io.*;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import process.user_page_processes;

/**
 *
 * @author User
 */
public class student_home_page extends javax.swing.JFrame {

    /**
     * Creates new form welcome_lecturer_page_2
     */
    private String studentName, studentEMail, studentPass, ID, line, time, date, location;
    private boolean isEditable = false;

    main_interface mi = new main_interface();
    processes pro = new processes();

    public student_home_page(String ID, String studentName, String studentEMail, String studentPass) {
        this.ID = ID;
        this.studentName = studentName;
        this.studentEMail = studentEMail;
        this.studentPass = studentPass;

        initComponents();

        try (BufferedReader readerL = new BufferedReader(new FileReader(pro.getFilePath(3)))) {
            while ((line = readerL.readLine()) != null) {
                String[] parts = line.split(",");
                String[] data = {parts[2], parts[3], parts[4]};
                DefaultTableModel Model = (DefaultTableModel) consultationTable.getModel();
                Model.addRow(data);
            }
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "File not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        try (BufferedReader readerL = new BufferedReader(new FileReader(pro.getFilePath(5)))) {
            while ((line = readerL.readLine()) != null) {
                String[] parts = line.split(",");
                if (studentEMail.equals(parts[0])) {
                    String[] data = {parts[2], parts[3], parts[4], parts[5], parts[6], parts[7]};
                    DefaultTableModel Model = (DefaultTableModel) upcomingAppointment.getModel();
                    Model.addRow(data);
                }
            }
        } catch (Exception e) {
            System.out.println("No appointments.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        Home = new javax.swing.JButton();
        Settings = new javax.swing.JButton();
        Logout = new javax.swing.JButton();
        feedback = new javax.swing.JButton();
        appointment = new javax.swing.JButton();
        layeredPane = new javax.swing.JLayeredPane();
        card1 = new javax.swing.JPanel();
        consultationPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        consultationTable = new javax.swing.JTable();
        consultationBook = new javax.swing.JButton();
        timeConsult = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        locationConsult = new javax.swing.JTextArea();
        dateConsult = new javax.swing.JTextField();
        clearConsultationFields = new javax.swing.JButton();
        card2 = new javax.swing.JPanel();
        settingsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        save = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        id = new javax.swing.JTextPane();
        editDetails = new javax.swing.JToggleButton();
        card3 = new javax.swing.JPanel();
        homePanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        upcomingAppointment = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        pastAppointment = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        selected1 = new javax.swing.JTextField();
        selected2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        card4 = new javax.swing.JPanel();
        feedbackPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("APU Consultation System (Student)");

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));
        jPanel5.setAlignmentX(1.0F);

        name.setFont(new java.awt.Font("MS PGothic", 0, 18)); // NOI18N
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("Welcome back " + studentName);
        name.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        Home.setBackground(new java.awt.Color(204, 204, 255));
        Home.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        Home.setText("  Home");
        Home.setBorder(null);
        Home.setContentAreaFilled(false);
        Home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Home.setDefaultCapable(false);
        Home.setOpaque(true);
        Home.setPreferredSize(new java.awt.Dimension(80, 32));
        Home.setRequestFocusEnabled(false);
        Home.setVerifyInputWhenFocusTarget(false);
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HomeMouseExited(evt);
            }
        });
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });

        Settings.setBackground(new java.awt.Color(204, 204, 255));
        Settings.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        Settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/settings.png"))); // NOI18N
        Settings.setText("  Settings");
        Settings.setBorder(null);
        Settings.setBorderPainted(false);
        Settings.setContentAreaFilled(false);
        Settings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Settings.setDefaultCapable(false);
        Settings.setOpaque(true);
        Settings.setPreferredSize(new java.awt.Dimension(80, 32));
        Settings.setRequestFocusEnabled(false);
        Settings.setVerifyInputWhenFocusTarget(false);
        Settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SettingsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SettingsMouseExited(evt);
            }
        });
        Settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsActionPerformed(evt);
            }
        });

        Logout.setBackground(new java.awt.Color(204, 204, 255));
        Logout.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout.png"))); // NOI18N
        Logout.setText("  Log out");
        Logout.setBorder(null);
        Logout.setBorderPainted(false);
        Logout.setContentAreaFilled(false);
        Logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Logout.setDefaultCapable(false);
        Logout.setOpaque(true);
        Logout.setPreferredSize(new java.awt.Dimension(80, 32));
        Logout.setRequestFocusEnabled(false);
        Logout.setVerifyInputWhenFocusTarget(false);
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LogoutMouseExited(evt);
            }
        });
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        feedback.setBackground(new java.awt.Color(204, 204, 255));
        feedback.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        feedback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/feedback.png"))); // NOI18N
        feedback.setText("  View Feedback");
        feedback.setBorder(null);
        feedback.setBorderPainted(false);
        feedback.setContentAreaFilled(false);
        feedback.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        feedback.setDefaultCapable(false);
        feedback.setOpaque(true);
        feedback.setPreferredSize(new java.awt.Dimension(80, 32));
        feedback.setRequestFocusEnabled(false);
        feedback.setVerifyInputWhenFocusTarget(false);
        feedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                feedbackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                feedbackMouseExited(evt);
            }
        });
        feedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackActionPerformed(evt);
            }
        });

        appointment.setBackground(new java.awt.Color(204, 204, 255));
        appointment.setFont(new java.awt.Font("MS PGothic", 1, 18)); // NOI18N
        appointment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/appointment.png"))); // NOI18N
        appointment.setText("Appointments");
        appointment.setBorder(null);
        appointment.setBorderPainted(false);
        appointment.setContentAreaFilled(false);
        appointment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        appointment.setDefaultCapable(false);
        appointment.setOpaque(true);
        appointment.setPreferredSize(new java.awt.Dimension(80, 32));
        appointment.setRequestFocusEnabled(false);
        appointment.setVerifyInputWhenFocusTarget(false);
        appointment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                appointmentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                appointmentMouseExited(evt);
            }
        });
        appointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Settings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(appointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
            .addComponent(feedback, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Settings, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(appointment, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(feedback, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        layeredPane.setLayout(new java.awt.CardLayout());

        card1.setBackground(new java.awt.Color(255, 255, 255));

        consultationPanel.setBackground(new java.awt.Color(204, 204, 255));
        consultationPanel.setPreferredSize(new java.awt.Dimension(379, 84));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel3.setText("Book Consultation");

        javax.swing.GroupLayout consultationPanelLayout = new javax.swing.GroupLayout(consultationPanel);
        consultationPanel.setLayout(consultationPanelLayout);
        consultationPanelLayout.setHorizontalGroup(
            consultationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultationPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        consultationPanelLayout.setVerticalGroup(
            consultationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultationPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addGap(10, 10, 10))
        );

        consultationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "Location", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        consultationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                consultationTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(consultationTable);

        consultationBook.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        consultationBook.setText("Book");
        consultationBook.setEnabled(false);
        consultationBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultationBookActionPerformed(evt);
            }
        });

        timeConsult.setEditable(false);
        timeConsult.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        timeConsult.setForeground(new java.awt.Color(153, 153, 153));
        timeConsult.setText("Time");
        timeConsult.setFocusable(false);
        timeConsult.setRequestFocusEnabled(false);
        timeConsult.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                timeConsultFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                timeConsultFocusLost(evt);
            }
        });

        locationConsult.setEditable(false);
        locationConsult.setColumns(20);
        locationConsult.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        locationConsult.setForeground(new java.awt.Color(153, 153, 153));
        locationConsult.setRows(5);
        locationConsult.setText("Location");
        locationConsult.setFocusable(false);
        locationConsult.setRequestFocusEnabled(false);
        locationConsult.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                locationConsultFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                locationConsultFocusLost(evt);
            }
        });
        jScrollPane3.setViewportView(locationConsult);

        dateConsult.setEditable(false);
        dateConsult.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dateConsult.setForeground(new java.awt.Color(153, 153, 153));
        dateConsult.setText("Date");
        dateConsult.setFocusable(false);
        dateConsult.setRequestFocusEnabled(false);
        dateConsult.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dateConsultFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateConsultFocusLost(evt);
            }
        });

        clearConsultationFields.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        clearConsultationFields.setText("Clear");
        clearConsultationFields.setEnabled(false);
        clearConsultationFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearConsultationFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout card1Layout = new javax.swing.GroupLayout(card1);
        card1.setLayout(card1Layout);
        card1Layout.setHorizontalGroup(
            card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(consultationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
            .addGroup(card1Layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(card1Layout.createSequentialGroup()
                        .addGroup(card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(timeConsult)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(dateConsult))
                        .addGap(118, 118, 118)
                        .addGroup(card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(consultationBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearConsultationFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        card1Layout.setVerticalGroup(
            card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(consultationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                        .addGroup(card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timeConsult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(consultationBook))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                        .addComponent(clearConsultationFields)
                        .addGap(75, 75, 75)))
                .addComponent(dateConsult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 62, Short.MAX_VALUE))
        );

        layeredPane.add(card1, "card4");

        card2.setBackground(new java.awt.Color(255, 255, 255));

        settingsPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel2.setText("Settings");

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addGap(10, 10, 10))
        );

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setText("Password");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Email");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Name");

        nameTextField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        nameTextField.setText(studentName);
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        emailTextField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        emailTextField.setText(studentEMail);
        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });

        passwordTextField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        passwordTextField.setText(studentPass);
        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });

        save.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setText("ID");

        id.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        id.setText(ID);
        jScrollPane1.setViewportView(id);
        id.setEditable(false);

        editDetails.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        editDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/disableEdit.png"))); // NOI18N
        editDetails.setText("Edit Details");
        editDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 132, Short.MAX_VALUE)
                        .addComponent(save)
                        .addGap(18, 18, 18)
                        .addComponent(editDetails))
                    .addComponent(jScrollPane1))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        javax.swing.GroupLayout card2Layout = new javax.swing.GroupLayout(card2);
        card2.setLayout(card2Layout);
        card2Layout.setHorizontalGroup(
            card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
        card2Layout.setVerticalGroup(
            card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(settingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        layeredPane.add(card2, "card3");

        card3.setBackground(new java.awt.Color(255, 255, 255));

        homePanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel15.setText("Appointments");

        javax.swing.GroupLayout homePanel1Layout = new javax.swing.GroupLayout(homePanel1);
        homePanel1.setLayout(homePanel1Layout);
        homePanel1Layout.setHorizontalGroup(
            homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homePanel1Layout.setVerticalGroup(
            homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel15)
                .addGap(10, 10, 10))
        );

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setText("Upcoming Appointments");

        upcomingAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lecturer Email", "Lecturer Name", "Time", "Location", "Date", "Status", "Reschedule"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        upcomingAppointment.setShowGrid(false);
        upcomingAppointment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                upcomingAppointmentMouseReleased(evt);
            }
        });
        jScrollPane5.setViewportView(upcomingAppointment);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("Past Appointments");

        pastAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lecturer Email", "Lecturer Name", "Time", "Location", "Date", "Status", "Reschedule"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(pastAppointment);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Provide Feedback");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel24.setText("Selected Row");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel25.setText("Selected Row");

        selected1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        selected1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        selected2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setText("Reschedule");

        javax.swing.GroupLayout card3Layout = new javax.swing.GroupLayout(card3);
        card3.setLayout(card3Layout);
        card3Layout.setHorizontalGroup(
            card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homePanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(card3Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel16)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card3Layout.createSequentialGroup()
                            .addComponent(jLabel24)
                            .addGap(20, 20, 20)
                            .addComponent(selected2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1)))
                    .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(card3Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(247, 247, 247))
                        .addComponent(jScrollPane5)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card3Layout.createSequentialGroup()
                            .addComponent(jLabel25)
                            .addGap(20, 20, 20)
                            .addComponent(selected1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(315, 315, 315)
                            .addComponent(jButton3))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        card3Layout.setVerticalGroup(
            card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(homePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(selected1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel24)
                    .addComponent(selected2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        layeredPane.add(card3, "card7");

        card4.setBackground(new java.awt.Color(255, 255, 255));

        feedbackPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel5.setText("Feedback");

        javax.swing.GroupLayout feedbackPanelLayout = new javax.swing.GroupLayout(feedbackPanel);
        feedbackPanel.setLayout(feedbackPanelLayout);
        feedbackPanelLayout.setHorizontalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5)
                .addContainerGap(525, Short.MAX_VALUE))
        );
        feedbackPanelLayout.setVerticalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addGap(10, 10, 10))
        );

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Feedback ID"
            }
        ));
        jScrollPane7.setViewportView(jTable6);

        javax.swing.GroupLayout card4Layout = new javax.swing.GroupLayout(card4);
        card4.setLayout(card4Layout);
        card4Layout.setHorizontalGroup(
            card4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(feedbackPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(card4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        card4Layout.setVerticalGroup(
            card4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(feedbackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(322, Short.MAX_VALUE))
        );

        layeredPane.add(card4, "card6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(layeredPane))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(layeredPane)
        );

        setSize(new java.awt.Dimension(1062, 656));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SetTextField() {
        timeConsult.setText("Time");
        timeConsult.setForeground(new Color(153, 153, 153));
        locationConsult.setText("Location");
        locationConsult.setForeground(new Color(153, 153, 153));
        dateConsult.setText("Date");
        dateConsult.setForeground(new Color(153, 153, 153));
    }

    private void DisableTextFields() {
        nameTextField.setEditable(false);
        emailTextField.setEditable(false);
        passwordTextField.setEditable(false);
    }

    private void appointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(card3);
        layeredPane.repaint();
        layeredPane.revalidate();
    }//GEN-LAST:event_appointmentActionPerformed

    private void appointmentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentMouseExited
        // TODO add your handling code here:
        appointment.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_appointmentMouseExited

    private void appointmentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentMouseEntered
        // TODO add your handling code here:
        appointment.setBackground(new Color(153, 153, 255));
    }//GEN-LAST:event_appointmentMouseEntered

    private void feedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(card4);
        layeredPane.repaint();
        layeredPane.revalidate();
    }//GEN-LAST:event_feedbackActionPerformed

    private void feedbackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackMouseExited
        // TODO add your handling code here:
        feedback.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_feedbackMouseExited

    private void feedbackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackMouseEntered
        // TODO add your handling code here:
        feedback.setBackground(new Color(153, 153, 255));
    }//GEN-LAST:event_feedbackMouseEntered

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        int userInput = JOptionPane.showConfirmDialog(null, "Are you sure?", "Confirmation Panel", JOptionPane.YES_NO_OPTION);
        switch (userInput) {
            case JOptionPane.YES_OPTION:
                this.dispose();
                mi.setVisible(true);
                break;
            case JOptionPane.NO_OPTION:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_LogoutActionPerformed

    private void LogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseExited
        // TODO add your handling code here:
        Logout.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_LogoutMouseExited

    private void LogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseEntered
        // TODO add your handling code here:
        Logout.setBackground(new Color(153, 153, 255));
    }//GEN-LAST:event_LogoutMouseEntered

    private void SettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(card2);
        layeredPane.repaint();
        layeredPane.revalidate();

        nameTextField.setEditable(false);
        emailTextField.setEditable(false);
        passwordTextField.setEditable(false);
    }//GEN-LAST:event_SettingsActionPerformed

    private void SettingsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SettingsMouseExited
        // TODO add your handling code here:
        Settings.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_SettingsMouseExited

    private void SettingsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SettingsMouseEntered
        // TODO add your handling code here:
        Settings.setBackground(new Color(153, 153, 255));
    }//GEN-LAST:event_SettingsMouseEntered

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
        layeredPane.removeAll();
        layeredPane.add(card1);
        layeredPane.repaint();
        layeredPane.revalidate();
    }//GEN-LAST:event_HomeActionPerformed

    private void HomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseExited
        // TODO add your handling code here:
        Home.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_HomeMouseExited

    private void HomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseEntered
        // TODO add your handling code here:
        Home.setBackground(new Color(153, 153, 255));
    }//GEN-LAST:event_HomeMouseEntered

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        editDetails.setSelected(false);
        DisableTextFields();
        editDetails.setIcon(new ImageIcon(getClass().getResource("/Images/disableEdit.png")));

        user_page_processes dcp = new user_page_processes(ID, emailTextField.getText(), nameTextField.getText(), passwordTextField.getText());

        try {
            dcp.setDetailsLS(2);
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_saveActionPerformed

    private void editDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDetailsActionPerformed
        // TODO add your handling code here:
        if (editDetails.isSelected()) {
            nameTextField.setEditable(true);
            emailTextField.setEditable(true);
            passwordTextField.setEditable(true);
            editDetails.setIcon(new ImageIcon(getClass().getResource("/Images/cow.gif")));
        } else {
            nameTextField.setText(studentName);
            emailTextField.setText(studentEMail);
            passwordTextField.setText(studentPass);

            DisableTextFields();
            editDetails.setIcon(new ImageIcon(getClass().getResource("/Images/disableEdit.png")));

        }
    }//GEN-LAST:event_editDetailsActionPerformed

    private void timeConsultFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_timeConsultFocusGained
        // TODO add your handling code here:
        if (timeConsult.getText().equals("Time")) {
            timeConsult.setText("");
            timeConsult.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_timeConsultFocusGained

    private void timeConsultFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_timeConsultFocusLost
        // TODO add your handling code here:
        if (timeConsult.getText().equals("")) {
            timeConsult.setText("Time");
            timeConsult.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_timeConsultFocusLost

    private void dateConsultFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateConsultFocusGained
        // TODO add your handling code here:
        if (dateConsult.getText().equals("Date")) {
            dateConsult.setText("");
            dateConsult.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_dateConsultFocusGained

    private void dateConsultFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateConsultFocusLost
        // TODO add your handling code here:
        if (dateConsult.getText().equals("")) {
            dateConsult.setText("Date");
            dateConsult.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_dateConsultFocusLost

    private void locationConsultFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locationConsultFocusGained
        // TODO add your handling code here:
        if (locationConsult.getText().equals("Location")) {
            locationConsult.setText("");
            locationConsult.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_locationConsultFocusGained

    private void locationConsultFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locationConsultFocusLost
        // TODO add your handling code here:
        if (locationConsult.getText().equals("")) {
            locationConsult.setText("Location");
            locationConsult.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_locationConsultFocusLost

    private void consultationTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultationTableMouseReleased
        // TODO add your handling code here:
        DefaultTableModel Model = (DefaultTableModel) consultationTable.getModel();

        int row = consultationTable.getSelectedRow();

        consultationBook.setEnabled(true);
        clearConsultationFields.setEnabled(true);

        try (BufferedReader readerL = new BufferedReader(new FileReader(pro.getFilePath(3)))) {
            while ((line = readerL.readLine()) != null) {
                time = Model.getValueAt(row, 0).toString();
                location = Model.getValueAt(row, 1).toString();
                date = Model.getValueAt(row, 2).toString();

                timeConsult.setText(time);
                locationConsult.setText(location);
                dateConsult.setText(date);

            }
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "File not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        timeConsult.setForeground(new Color(0, 0, 0));
        locationConsult.setForeground(new Color(0, 0, 0));
        dateConsult.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_consultationTableMouseReleased

    private void clearConsultationFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearConsultationFieldsActionPerformed
        // TODO add your handling code here:
        consultationBook.setEnabled(false);
        clearConsultationFields.setEnabled(false);
        SetTextField();
    }//GEN-LAST:event_clearConsultationFieldsActionPerformed

    private void consultationBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultationBookActionPerformed
        // TODO add your handling code here:
        int row = consultationTable.getSelectedRow();

        user_page_processes user = new user_page_processes(studentEMail, studentName, row);

        try {
            user.setDetailsLS(6);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Failed to send deletion.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        switch (user.getSuccess()) {
            case 1 -> {
                DefaultTableModel Model = (DefaultTableModel) consultationTable.getModel();
                Model.removeRow(consultationTable.getSelectedRow());
            }
            default -> {
                JOptionPane.showMessageDialog(null, "Table recording issue.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        consultationBook.setEnabled(false);
        clearConsultationFields.setEnabled(false);
        SetTextField();
    }//GEN-LAST:event_consultationBookActionPerformed

    private void upcomingAppointmentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upcomingAppointmentMouseReleased
        // TODO add your handling code here:
        DefaultTableModel Model = (DefaultTableModel) upcomingAppointment.getModel();

        int row1 = upcomingAppointment.getSelectedRow();
        selected1.setText(Integer.toString(row1 + 1));
    }//GEN-LAST:event_upcomingAppointmentMouseReleased

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(lecturer_home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(lecturer_home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(lecturer_home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(lecturer_home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new lecturer_home_page().setVisible(true);
////            }
////        });
////    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Home;
    private javax.swing.JButton Logout;
    private javax.swing.JButton Settings;
    private javax.swing.JButton appointment;
    private javax.swing.JPanel card1;
    private javax.swing.JPanel card2;
    private javax.swing.JPanel card3;
    private javax.swing.JPanel card4;
    private javax.swing.JButton clearConsultationFields;
    private javax.swing.JButton consultationBook;
    private javax.swing.JPanel consultationPanel;
    private javax.swing.JTable consultationTable;
    private javax.swing.JTextField dateConsult;
    private javax.swing.JToggleButton editDetails;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JButton feedback;
    private javax.swing.JPanel feedbackPanel;
    private javax.swing.JPanel homePanel1;
    private javax.swing.JTextPane id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable6;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JTextArea locationConsult;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTable pastAppointment;
    private javax.swing.JButton save;
    private javax.swing.JTextField selected1;
    private javax.swing.JTextField selected2;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JTextField timeConsult;
    private javax.swing.JTable upcomingAppointment;
    // End of variables declaration//GEN-END:variables
}
